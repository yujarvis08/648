{"version":3,"sources":["logo.svg","components/Homepage.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","React","useState","cuisines","setCuisines","restaurants","setRestaurants","a","fetch","json","response","cuisinesArr","cuisine","push","console","log","searchRestaurantsByName","name","trim","useEffect","fetchCuisines","then","catch","Container","className","Row","Form","onSubmit","event","preventDefault","target","elements","restaurantSearchBar","value","Col","lg","Label","htmlFor","srOnly","InputGroup","Prepend","Control","as","id","onChange","searchRestaurantsByCuisine","map","index","FormControl","placeholder","Append","Button","variant","type","restaurant","Card","style","width","Img","src","imagePath","Body","Title","Text","description","priceRating","restaurantId","Main","Fragment","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,I,8HCiKAA,EAtJE,WAAO,IAAD,EAEWC,IAAMC,SAAS,IAF1B,mBAEdC,EAFc,KAEJC,EAFI,OAGiBH,IAAMC,SAAS,IAHhC,mBAGdG,EAHc,KAGDC,EAHC,iDAKrB,oCAAAC,EAAA,+EAGgCC,MAAM,mCAHtC,8BAG0EC,OAH1E,OAGQC,EAHR,OAIQC,EAAc,CAAC,gBAJvB,cAMwBD,EAASP,UANjC,IAMI,2BAASS,EAAT,QACED,EAAYE,KAAKD,EAAQA,SAP/B,uDASWD,GATX,kCAYIG,QAAQC,IAAR,MAZJ,2DALqB,+BA2BNC,EA3BM,8EA2BrB,WAAuCC,GAAvC,eAAAV,EAAA,6DACEU,EAAOA,EAAKC,OADd,kBAGgCV,MAAM,+BAAD,OAAgCS,IAHrE,8BAG8ER,OAH9E,OAGQC,EAHR,OAIIJ,EAAeI,EAASL,aAJ5B,kDAMIS,QAAQC,IAAR,MANJ,2DA3BqB,kEA0CrB,WAA0CH,GAA1C,eAAAL,EAAA,yDACkB,iBAAZK,EADN,gBAEII,EAAwB,IAF5B,gDAKkCR,MAAM,kCAAD,OAAmCI,IAL1E,8BAKsFH,OALtF,OAKUC,EALV,OAMMJ,EAAeI,EAASL,aAN9B,kDAQMS,QAAQC,IAAR,MARN,2DA1CqB,sBA2ErB,OAZAd,IAAMkB,WAAU,YA/DK,2CAiEnBC,GACGC,KAAKjB,GACLkB,MAAMR,QAAQC,KAEjBC,EAAwB,MACvB,IAEHF,QAAQC,IAAI,cAAeV,GAIzB,eAACkB,EAAA,EAAD,CAAWC,UAAU,WAArB,UACE,eAACC,EAAA,EAAD,CAAKD,UAAU,yBAAf,UACE,gEACA,4CACA,2CACA,2CAGF,cAACE,EAAA,EAAD,CAAMC,SA/DV,SAA4BC,GAC1BA,EAAMC,iBAENb,EADWY,EAAME,OAAOC,SAASC,oBAAoBC,QA6DnD,SACE,cAACP,EAAA,EAAKD,IAAN,CAAUD,UAAU,qBAApB,SAEE,eAACU,EAAA,EAAD,CAAKC,GAAG,IAAIX,UAAU,SAAtB,UAEE,cAACE,EAAA,EAAKU,MAAN,CAAYC,QAAQ,sBAAsBC,QAAM,EAAhD,uCAIA,eAACC,EAAA,EAAD,CAAYf,UAAU,OAAtB,UAGE,cAACe,EAAA,EAAWC,QAAZ,UACE,cAACd,EAAA,EAAKe,QAAN,CACEC,GAAG,SACHC,GAAG,kBACHC,SA/DhB,SAA6BhB,IArCR,oCAuCnBiB,CADcjB,EAAME,OAAOG,QA+DbT,UAAU,0BAJZ,SAMGrB,EAAS2C,KAAI,SAAClC,EAASmC,GACtB,OACE,iCACGnC,GADUmC,UAQrB,cAACC,EAAA,EAAD,CACE/B,KAAK,sBACLgC,YAAY,8BAKd,cAACV,EAAA,EAAWW,OAAZ,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,6BAA6BC,KAAK,SAAlD,4BASV,cAAC5B,EAAA,EAAD,CAAKD,UAAU,gCAAf,SACGnB,EAAYyC,KAAI,SAACQ,EAAYP,GAC5B,OACE,eAACQ,EAAA,EAAD,CAAoCC,MAAO,CAAEC,MAAO,SAAWjC,UAAU,MAAzE,UACE,cAAC+B,EAAA,EAAKG,IAAN,CAAUN,QAAQ,MAAMO,IAAKL,EAAWM,YACxC,eAACL,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,UAAaR,EAAWrC,OACxB,cAACsC,EAAA,EAAKQ,KAAN,UAAYT,EAAWU,cACvB,cAACT,EAAA,EAAKQ,KAAN,UAAYT,EAAWW,mBALhBX,EAAWY,uBCzHnBC,EAlBF,WACT,OACI,cAAC,IAAMC,SAAP,UACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACI,8CCHLC,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d6b236eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n// import { v4 as uuidv4 } from 'uuid';\n\nconst Homepage = () => {\n\n  const [cuisines, setCuisines] = React.useState([]);\n  const [restaurants, setRestaurants] = React.useState([]);\n\n  async function fetchCuisines() {\n    try {\n\n      let response = await (await fetch('/api/search/restaurant/cuisines')).json();\n      let cuisinesArr = [\"All cuisines\"];\n\n      for (let cuisine of response.cuisines)\n        cuisinesArr.push(cuisine.cuisine);\n\n      return cuisinesArr;\n\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleSubmitSearch(event) {\n    event.preventDefault();\n    let name = event.target.elements.restaurantSearchBar.value\n    searchRestaurantsByName(name);\n  }\n\n  async function searchRestaurantsByName(name) {\n    name = name.trim(); // clean any white spaces before and after\n    try {\n      let response = await (await fetch(`/api/search/restaurant?name=${name}`)).json();\n      setRestaurants(response.restaurants);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleSelectCuisine(event) {\n    let cuisine = event.target.value;\n    searchRestaurantsByCuisine(cuisine);\n  }\n\n  async function searchRestaurantsByCuisine(cuisine) {\n    if (cuisine === \"All cuisines\") {\n      searchRestaurantsByName(\"\");\n    } else {\n      try {\n        let response = await (await fetch(`/api/search/restaurant?cuisine=${cuisine}`)).json();\n        setRestaurants(response.restaurants);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  // const cuisineFilter = async (cuisine) => {\n  //   console.log('cuisine:', cuisine);\n  //   let rest = await fetchRestaurants('');\n  //   console.log('rest', rest)\n  //   let filterRest = rest.filter(restaurant => restaurant.cuisine === cuisine);\n  //   setRestaurants(filterRest);\n  // }\n\n  React.useEffect(() => {\n    // get list of unique quisines available from our DB\n    fetchCuisines()\n      .then(setCuisines)\n      .catch(console.log);\n    // display all restaurants on load\n    searchRestaurantsByName(\"\");\n  }, []);\n\n  console.log('Restaurants', restaurants);\n  // console.log('Cuisines', cuisines);\n\n  return (\n    <Container className=\"bg-white\">\n      <Row className=\"justify-content-around\">\n        <p>Software Engineering Class SFSU</p>\n        <p>Spring 2021</p>\n        <p>Section 03</p>\n        <p>Team 03</p>\n      </Row>\n\n      <Form onSubmit={handleSubmitSearch}>\n        <Form.Row className=\"align-items-center\">\n\n          <Col lg=\"8\" className=\"m-auto\">\n            {/* Label for screen readers only */}\n            <Form.Label htmlFor=\"restaurantSearchBar\" srOnly>\n              Enter a restaurant's name\n            </Form.Label>\n\n            <InputGroup className=\"mb-2\">\n\n              {/* Cuisine options */}\n              <InputGroup.Prepend>\n                <Form.Control\n                  as=\"select\"\n                  id=\"select-cuisines\"\n                  onChange={handleSelectCuisine}\n                  className=\"bg-light border-right-0\"\n                >\n                  {cuisines.map((cuisine, index) => {\n                    return (\n                      <option key={index}>\n                        {cuisine}\n                      </option>)\n                  })}\n                </Form.Control>\n              </InputGroup.Prepend>\n\n              {/* Restaurant search bar */}\n              <FormControl\n                name=\"restaurantSearchBar\"\n                placeholder=\"Enter a restaurant's name\"\n              // onChange={e => searchRestaurantsByName(e.target.value)}\n              />\n\n              {/* Submit search (button) */}\n              <InputGroup.Append>\n                <Button variant=\"outline-secondary bg-light\" type=\"submit\">Go</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Col>\n\n        </Form.Row>\n      </Form>\n\n      {/* Restaurant Cards */}\n      <Row className=\"d-flex justify-content-center\">\n        {restaurants.map((restaurant, index) => {\n          return (\n            <Card key={restaurant.restaurantId} style={{ width: '18rem' }} className=\"m-3\">\n              <Card.Img variant=\"top\" src={restaurant.imagePath} />\n              <Card.Body>\n                <Card.Title>{restaurant.name}</Card.Title>\n                <Card.Text>{restaurant.description}</Card.Text>\n                <Card.Text>{restaurant.priceRating}</Card.Text>\n              </Card.Body>\n            </Card>\n          )\n        })\n        }\n      </Row>\n\n    </Container>\n  );\n};\n\nexport default Homepage;\n{/* <Tabs defaultActiveKey=\"Alex\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"Alex\" title=\"Alex\">\n          <Alex />\n        </Tab>\n        <Tab eventKey=\"Amit\" title=\"Amit\">\n\n          <Amit />\n        </Tab>\n\n        <Tab eventKey=\"Angela\" title=\"Angela\">\n          <Angela />\n\n        </Tab>\n        <Tab eventKey=\"Jacob\" title=\"Jacob\">\n          <Jacob />\n        </Tab>\n        <Tab eventKey=\"Jarvis\" title=\"Jarvis\">\n          <Jarvis />\n        </Tab>\n        <Tab eventKey=\"Roberto\" title=\"Roberto\">\n          <Roberto />\n        </Tab>\n      </Tabs> */}","/** This is where all main routes within our app will be defined */\nimport React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./Homepage\";\n\nconst Main = () => {\n    return (\n        <React.Fragment>\n            <Switch>\n\n                <Route exact path=\"/\">\n                    <Homepage />\n                </Route>\n\n                <Route exact path=\"/ping\">\n                    <h1>Pong</h1>\n                </Route>\n\n            </Switch>\n        </React.Fragment>\n    );\n}\n\nexport default Main;","import logo from './logo.svg';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}