{"version":3,"sources":["logo.svg","components/Homepage.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Homepage","React","useState","cuisines","setCuisines","restaurants","setRestaurants","a","fetch","json","response","cuisinesArr","cuisine","push","searchRestaurantsByName","name","useEffect","fetchCuisines","then","console","log","Container","className","Row","Form","Col","lg","Label","htmlFor","srOnly","InputGroup","DropdownButton","as","Prepend","variant","title","id","onSelect","map","index","Dropdown","Item","eventKey","FormControl","placeholder","onChange","e","target","value","CardColumns","restaurant","Card","style","width","Img","src","imagePath","Body","Title","Text","description","priceRating","restaurantId","Main","Fragment","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b318c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\n// import { v4 as uuidv4 } from 'uuid';\n\nconst Homepage = () => {\n\n  const [cuisines, setCuisines] = React.useState([]);\n  const [restaurants, setRestaurants] = React.useState([]);\n\n  async function fetchCuisines() {\n    let response = await (await fetch('/api/search/restaurant/cuisines')).json();\n    let cuisinesArr = [\"All\"];\n\n    for (let cuisine of response.cuisines)\n      cuisinesArr.push(cuisine.cuisine);\n\n    return cuisinesArr;\n  }\n\n  async function searchRestaurantsByName(name) {\n    let response = await (await fetch(`/api/search/restaurant?name=${name}`)).json();\n    setRestaurants(response.restaurants);\n  }\n\n  async function searchRestaurantsByCuisine(cuisine) {\n    if (cuisine === \"All\") searchRestaurantsByName(\"\");\n    let response = await (await fetch(`/api/search/restaurant?cuisine=${cuisine}`)).json();\n    setRestaurants(response.restaurants);\n  }\n\n  // const cuisineFilter = async (cuisine) => {\n  //   console.log('cuisine:', cuisine);\n  //   let rest = await fetchRestaurants('');\n  //   console.log('rest', rest)\n  //   let filterRest = rest.filter(restaurant => restaurant.cuisine === cuisine);\n  //   setRestaurants(filterRest);\n  // }\n\n  React.useEffect(() => {\n    fetchCuisines().then(setCuisines);\n  }, []);\n\n  console.log('Restaurants', restaurants);\n  // console.log('Cuisines', cuisines);\n\n  return (\n    <Container className=\"bg-white\">\n      <Row className=\"justify-content-around\">\n        <p>Software Engineering Class SFSU</p>\n        <p>Spring 2021</p>\n        <p>Section 03</p>\n        <p>Team 03</p>\n      </Row>\n\n      <Form>\n        <Form.Row className=\"align-items-center\">\n\n          <Col lg=\"8\" className=\"m-auto\">\n            {/* Label for screen readers only */}\n            <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\n              Enter a restaurant's name\n            </Form.Label>\n\n            <InputGroup className=\"mb-2\">\n              <DropdownButton\n                as={InputGroup.Prepend}\n                variant=\"outline-secondary\"\n                title=\"Cuisines\"\n                id=\"dropdown-cuisines\"\n                onSelect={searchRestaurantsByCuisine}\n              >\n                {/* Cuisine dropdown item list */}\n                {cuisines.map((cuisine, index) => {\n                  return (\n                    <Dropdown.Item key={index} eventKey={cuisine}>\n                      {cuisine}\n                    </Dropdown.Item>)\n                })}\n\n              </DropdownButton>\n\n              <FormControl\n                id=\"inlineFormInputGroup\"\n                placeholder=\"Enter a restaurant's name\"\n                onChange={e => searchRestaurantsByName(e.target.value)}\n              />\n            </InputGroup>\n          </Col>\n\n          <CardColumns>\n            {restaurants.map((restaurant, index) => {\n              return (\n                <Card key={restaurant.restaurantId} style={{ width: '18rem' }}>\n                  <Card.Img variant=\"top\" src={restaurant.imagePath} />\n                  <Card.Body>\n                    <Card.Title>{restaurant.name}</Card.Title>\n                    <Card.Text>{restaurant.description}</Card.Text>\n                    <Card.Text>{restaurant.priceRating}</Card.Text>\n                  </Card.Body>\n                </Card>\n              )\n            })\n            }\n          </CardColumns>\n\n        </Form.Row>\n      </Form>\n\n    </Container>\n  );\n};\n\nexport default Homepage;\n{/* <Tabs defaultActiveKey=\"Alex\" id=\"uncontrolled-tab-example\">\n        <Tab eventKey=\"Alex\" title=\"Alex\">\n          <Alex />\n        </Tab>\n        <Tab eventKey=\"Amit\" title=\"Amit\">\n\n          <Amit />\n        </Tab>\n\n        <Tab eventKey=\"Angela\" title=\"Angela\">\n          <Angela />\n\n        </Tab>\n        <Tab eventKey=\"Jacob\" title=\"Jacob\">\n          <Jacob />\n        </Tab>\n        <Tab eventKey=\"Jarvis\" title=\"Jarvis\">\n          <Jarvis />\n        </Tab>\n        <Tab eventKey=\"Roberto\" title=\"Roberto\">\n          <Roberto />\n        </Tab>\n      </Tabs> */}","/** This is where all main routes within our app will be defined */\nimport React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Homepage from \"./Homepage\";\n\nconst Main = () => {\n    return (\n        <React.Fragment>\n            <Switch>\n\n                <Route exact path=\"/\">\n                    <Homepage />\n                </Route>\n\n                <Route exact path=\"/ping\">\n                    <h1>Pong</h1>\n                </Route>\n\n            </Switch>\n        </React.Fragment>\n    );\n}\n\nexport default Main;","import logo from './logo.svg';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}